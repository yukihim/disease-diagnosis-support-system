services:
  db: # Starts first (no dependencies)
    image: postgres:13
    environment:
      POSTGRES_USER: flask
      POSTGRES_PASSWORD: jans-ancd=123
      POSTGRES_DB: ProductionDatabase
    networks:
        - my-bridge-network
    volumes:
      - my-db-data:/var/lib/postgresql/data

  pgadmin: # Waits for db
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
        - my-bridge-network
    depends_on:
      - db # Ensures db is started before pgadmin

  ai: # Waits for db (pgadmin can start concurrently or after db)
    build:
      context: ./ai
      dockerfile: Dockerfile
    ports:
      - "5002:5002" # AI runs on host port 5002, container port 5002
    networks:
      - my-bridge-network
    environment:
      - GEMINI_API_KEY=AIzaSyC5bXfXbB5RRUr3RfKC-tGTALhT-7k0grY # Or use Docker secrets
      - GEMINI_MODEL=gemini-2.0-flash
    depends_on:
      - db # Ensures db is started before ai

  app: # Waits for db and ai
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    environment:
      - FLASK_APP=app.py # Corrected based on previous context
      - FLASK_ENV=development
      # Add DATABASE_URL if your app needs it
      # - DATABASE_URL=postgresql://flask:jans-ancd=123@db:5432/ProductionDatabase
    volumes:
      - ./backend:/app
    networks:
      - my-bridge-network
    depends_on:
      - db # Ensures db is started before app
      - ai # Ensures ai is started before app

volumes:
    my-db-data:

networks:
  my-bridge-network:
    driver: bridge